<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MarcusW.VncClient.Avalonia</name>
    </assembly>
    <members>
        <member name="T:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLogger">
            <summary>
            Logging implementation that forwards any log output to Avalonias own logging sinks.
            </summary>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLogger.BeginScope``1(``0)">
            <inheritdoc />
            <remarks>
            Please note that scopes are not supported by this logger.
            </remarks>
        </member>
        <member name="T:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLogger.NullScope">
            <summary>
            Represents an empty logging scope without any logic.
            </summary>
        </member>
        <member name="P:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLogger.NullScope.Instance">
            <summary>
            Gets the default instance of the <see cref="T:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLogger.NullScope"/>.
            </summary>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLogger.NullScope.Dispose">
            <inheritdoc />
        </member>
        <member name="T:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLoggerProvider">
            <summary>
            Provider for the <see cref="T:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLogger"/> logging adapter.
            </summary>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLoggerProvider.CreateLogger(System.String)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Adapters.Logging.AvaloniaLoggerProvider.Dispose">
            <inheritdoc />
        </member>
        <member name="T:MarcusW.VncClient.Avalonia.Adapters.Rendering.AvaloniaFramebufferReference">
            <inheritdoc />
        </member>
        <member name="P:MarcusW.VncClient.Avalonia.Adapters.Rendering.AvaloniaFramebufferReference.Address">
            <inheritdoc />
        </member>
        <member name="P:MarcusW.VncClient.Avalonia.Adapters.Rendering.AvaloniaFramebufferReference.Size">
            <inheritdoc />
        </member>
        <member name="P:MarcusW.VncClient.Avalonia.Adapters.Rendering.AvaloniaFramebufferReference.Format">
            <inheritdoc />
        </member>
        <member name="P:MarcusW.VncClient.Avalonia.Adapters.Rendering.AvaloniaFramebufferReference.HorizontalDpi">
            <inheritdoc />
        </member>
        <member name="P:MarcusW.VncClient.Avalonia.Adapters.Rendering.AvaloniaFramebufferReference.VerticalDpi">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Adapters.Rendering.AvaloniaFramebufferReference.Dispose">
            <inheritdoc />
        </member>
        <member name="T:MarcusW.VncClient.Avalonia.Conversions">
            <summary>
            Helper functions for converting Avalonia specific types to their more abstract pendants.
            </summary>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Conversions.GetSize(Avalonia.PixelSize)">
            <summary>
            Converts a Avalonia <see cref="T:Avalonia.PixelSize"/> to a <see cref="T:MarcusW.VncClient.Size"/>.
            </summary>
            <param name="avaloniaPixelSize">Value to convert.</param>
            <returns>The conversion result.</returns>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Conversions.GetPixelSize(MarcusW.VncClient.Size)">
            <summary>
            Converts a <see cref="T:MarcusW.VncClient.Size"/> to a Avalonia <see cref="T:Avalonia.PixelSize"/>.
            </summary>
            <param name="size">Value to convert.</param>
            <returns>The conversion result.</returns>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Conversions.GetPixelFormat(Avalonia.Platform.PixelFormat)">
            <summary>
            Converts a Avalonia PixelFormat to a <see cref="T:MarcusW.VncClient.PixelFormat"/>.
            </summary>
            <param name="avaloniaPixelFormat">Value to convert.</param>
            <returns>The conversion result.</returns>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.Conversions.GetPosition(Avalonia.Point)">
            <summary>
            Converts a Avalonia <see cref="T:Avalonia.Point"/> to a <see cref="T:MarcusW.VncClient.Position"/>.
            </summary>
            <param name="point">Value to convert.</param>
            <returns>The conversion result.</returns>
        </member>
        <member name="T:MarcusW.VncClient.Avalonia.Converters.VncClientConverters">
            <summary>
            Provides a set of useful <see cref="T:Avalonia.Data.Converters.IValueConverter"/>s for working with the vnc client library.
            </summary>
        </member>
        <member name="F:MarcusW.VncClient.Avalonia.Converters.VncClientConverters.RfbProtocolVersionToString">
            <summary>
            A value converter that returns a readable string for a given <see cref="T:MarcusW.VncClient.Protocol.RfbProtocolVersion"/>.
            </summary>
        </member>
        <member name="T:MarcusW.VncClient.Avalonia.KeyMapping">
            <summary>
            Provides methods for mapping keys.
            </summary>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.KeyMapping.GetSymbolFromKey(Avalonia.Input.Key,System.Boolean)">
            <summary>
            Maps an Avalonia <see cref="T:Avalonia.Input.Key"/> to a <see cref="T:MarcusW.VncClient.KeySymbol"/>.
            </summary>
            <param name="key">The key.</param>
            <param name="includePrintable">True, if printable chars should be included in the mapping, false otherwise.</param>
            <returns>The X key symbol.</returns>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.KeyMapping.GetSymbolFromChar(System.Char)">
            <summary>
            Maps a printable char to a <see cref="T:MarcusW.VncClient.KeySymbol"/>.
            </summary>
            <param name="c">The char.</param>
            <returns>The X key symbol.</returns>
        </member>
        <member name="T:MarcusW.VncClient.Avalonia.RfbRenderTarget">
            <summary>
            A control that provides access to a target framebuffer for rendering frames onto it.
            </summary>
            <remarks>
            This control ignores the VNC multi-screen feature and therefore renders all screens (the whole framebuffer) in one piece.
            </remarks>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.RfbRenderTarget.GrabFramebufferReference(MarcusW.VncClient.Size,System.Collections.Immutable.IImmutableSet{MarcusW.VncClient.Screen})">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.RfbRenderTarget.Render(Avalonia.Media.DrawingContext)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.RfbRenderTarget.MeasureOverride(Avalonia.Size)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.RfbRenderTarget.Dispose">
            <inheritdoc />
        </member>
        <member name="T:MarcusW.VncClient.Avalonia.VncView">
            <summary>
            Displays a remote screen using the RFB protocol.
            </summary>
        </member>
        <member name="F:MarcusW.VncClient.Avalonia.VncView.ConnectionProperty">
            <summary>
            Defines the <see cref="P:MarcusW.VncClient.Avalonia.VncView.Connection"/> property.
            </summary>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.#cctor">
            <summary>
            Initializes static members of the <see cref="T:MarcusW.VncClient.Avalonia.VncView"/> class.
            </summary>
        </member>
        <member name="P:MarcusW.VncClient.Avalonia.VncView.Connection">
            <summary>
            Gets or sets the connection that is shown in this VNC view.
            </summary>
            <remarks>
            Interactions with this <see cref="T:MarcusW.VncClient.Avalonia.VncView"/> will be forwarded to the selected <see cref="T:MarcusW.VncClient.RfbConnection"/>.
            In case this property is set to <see langword="null"/>, no connection will be attached to this view.
            </remarks>
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.RingBell">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.HandleServerClipboardUpdate(System.String)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.OnTextInput(Avalonia.Input.TextInputEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.OnKeyDown(Avalonia.Input.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.OnKeyUp(Avalonia.Input.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.OnLostFocus(Avalonia.Interactivity.RoutedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.OnPointerMoved(Avalonia.Input.PointerEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.OnPointerPressed(Avalonia.Input.PointerPressedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.OnPointerReleased(Avalonia.Input.PointerReleasedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:MarcusW.VncClient.Avalonia.VncView.OnPointerWheelChanged(Avalonia.Input.PointerWheelEventArgs)">
            <inheritdoc />
        </member>
        <member name="F:MarcusW.VncClient.Avalonia.VncView.AutoResizeRemoteProperty">
            <summary>
            Defines the <see cref="P:MarcusW.VncClient.Avalonia.VncView.AutoResizeRemote"/> property.
            </summary>
        </member>
        <member name="F:MarcusW.VncClient.Avalonia.VncView.OptimalSizeProperty">
            <summary>
            Defines the <see cref="P:MarcusW.VncClient.Avalonia.VncView.OptimalSize"/> property.
            </summary>
        </member>
        <member name="P:MarcusW.VncClient.Avalonia.VncView.AutoResizeRemote">
            <summary>
            Gets or sets whether the remote view should be automatically resized to fit the current <see cref="T:MarcusW.VncClient.Avalonia.VncView"/>'s size (or the <see cref="P:MarcusW.VncClient.Avalonia.VncView.OptimalSize"/>).
            </summary>
        </member>
        <member name="P:MarcusW.VncClient.Avalonia.VncView.OptimalSize">
            <summary>
            Gets or sets the optimal size value that is used to resize the remote view to make it fit into this optimal size.
            If set to <see langword="null"/>, the size of this <see cref="T:MarcusW.VncClient.Avalonia.VncView"/> itself is used as the optimal size for the remote view.
            </summary>
            <remarks>
            This property is useful when this <see cref="T:MarcusW.VncClient.Avalonia.VncView"/> is contained in e.g. a <see cref="T:Avalonia.Controls.ScrollViewer"/>.
            In this case the view would never shrink when this property isn't used.
            </remarks>
        </member>
    </members>
</doc>
